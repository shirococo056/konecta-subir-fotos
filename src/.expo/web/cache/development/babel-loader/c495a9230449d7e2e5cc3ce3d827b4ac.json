{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from \"../context/firebase\";\nexport default function useAuthListener() {\n  var _useState = useState(JSON.parse(localStorage.getItem('authUser'))),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useContext = useContext(FirebaseContext),\n      firebase = _useContext.firebase;\n\n  useEffect(function () {\n    var listener = firebase.auth().onAuthStateChanged(function (authUser) {\n      if (authUser) {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n    return function () {\n      return listener();\n    };\n  }, []);\n  return {\n    user: user\n  };\n}","map":{"version":3,"sources":["C:/Users/Adri/Desktop/subir fotos/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","JSON","parse","localStorage","getItem","user","setUser","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,eAAP;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,kBAAwBJ,QAAQ,CAACK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAAqBR,UAAU,CAACC,eAAD,CAA/B;AAAA,MAAQQ,QAAR,eAAQA,QAAR;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,QAAD,EAAc;AAChE,UAAIA,QAAJ,EAAc;AAEZR,QAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCX,IAAI,CAACY,SAAL,CAAeF,QAAf,CAAjC;AACAL,QAAAA,OAAO,CAACK,QAAD,CAAP;AACD,OAJD,MAIO;AAELR,QAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAR,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAVgB,CAAjB;AAYA,WAAO;AAAA,aAAME,QAAQ,EAAd;AAAA,KAAP;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO;AAAEH,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../context/firebase';\n\nexport default function useAuthListener() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const { firebase } = useContext(FirebaseContext);\n\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // we have a user...therefore we can store the user in localstorage\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        // we don't have an authUser, therefore clear the localstorage\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n\n    return () => listener();\n  }, []);\n\n  return { user };\n}\n"]},"metadata":{},"sourceType":"module"}