{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Adri\\\\Desktop\\\\subir fotos\\\\src\\\\components\\\\post\\\\comments.js\";\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport AddComment from \"./add-comment\";\nexport default function Comments(_ref) {\n  var _this = this;\n\n  var docId = _ref.docId,\n      allComments = _ref.comments,\n      posted = _ref.posted,\n      commentInput = _ref.commentInput;\n\n  var _useState = useState(allComments),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"p-4 pt-1 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, comments.length >= 3 && React.createElement(\"p\", {\n    className: \"text-sm text-gray-base mb-1 cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"View all comments\"), comments.slice(0, 3).map(function (item) {\n    return React.createElement(\"p\", {\n      key: item.comment + \"-\" + item.displayName,\n      className: \"mb-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, React.createElement(Link, {\n      to: \"/p/\" + item.displayName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, React.createElement(\"span\", {\n      className: \"mr-1 font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, item.displayName)), React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, item.comment));\n  }), React.createElement(\"p\", {\n    className: \"text-gray-base uppercase text-xs mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, formatDistance(posted, new Date()))), React.createElement(AddComment, {\n    docId: docId,\n    comments: comments,\n    setComments: setComments,\n    commentInput: commentInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:/Users/Adri/Desktop/subir fotos/src/components/post/comments.js"],"names":["useState","PropTypes","formatDistance","Link","AddComment","Comments","docId","allComments","comments","posted","commentInput","setComments","length","slice","map","item","comment","displayName","Date","propTypes","string","isRequired","array","number","object"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,QAAT,OAA0E;AAAA;;AAAA,MAAtDC,KAAsD,QAAtDA,KAAsD;AAAA,MAArCC,WAAqC,QAA/CC,QAA+C;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;;AACvF,kBAAgCV,QAAQ,CAACO,WAAD,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBG,WAAjB;;AAEA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACI,MAAT,IAAmB,CAAnB,IACC;AAAG,IAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAIGJ,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAAyB,UAACC,IAAD;AAAA,WACxB;AAAG,MAAA,GAAG,EAAKA,IAAI,CAACC,OAAV,SAAqBD,IAAI,CAACE,WAAhC;AAA+C,MAAA,SAAS,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,UAAQF,IAAI,CAACE,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCF,IAAI,CAACE,WAAvC,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACC,OAAZ,CAJF,CADwB;AAAA,GAAzB,CAJH,EAYE;AAAG,IAAA,SAAS,EAAC,uCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,cAAc,CAACO,MAAD,EAAS,IAAIS,IAAJ,EAAT,CADjB,CAZF,CADF,EAiBE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEZ,KADT;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,WAAW,EAAEG,WAHf;AAIE,IAAA,YAAY,EAAED,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AA0BD;AAEDL,QAAQ,CAACc,SAAT,GAAqB;AACnBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MAAV,CAAiBC,UADL;AAEnBb,EAAAA,QAAQ,EAAEP,SAAS,CAACqB,KAAV,CAAgBD,UAFP;AAGnBZ,EAAAA,MAAM,EAAER,SAAS,CAACsB,MAAV,CAAiBF,UAHN;AAInBX,EAAAA,YAAY,EAAET,SAAS,CAACuB,MAAV,CAAiBH;AAJZ,CAArB","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport AddComment from './add-comment';\n\nexport default function Comments({ docId, comments: allComments, posted, commentInput }) {\n  const [comments, setComments] = useState(allComments);\n\n  return (\n    <>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 3 && (\n          <p className=\"text-sm text-gray-base mb-1 cursor-pointer\">View all comments</p>\n        )}\n        {comments.slice(0, 3).map((item) => (\n          <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n            <Link to={`/p/${item.displayName}`}>\n              <span className=\"mr-1 font-bold\">{item.displayName}</span>\n            </Link>\n            <span>{item.comment}</span>\n          </p>\n        ))}\n        <p className=\"text-gray-base uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())}\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </>\n  );\n}\n\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.object.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}